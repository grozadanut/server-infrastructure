networks:
  web:
    external: true
  local:
    external: true

services:
  frontend:
    image: plone/plone-frontend:17
    networks:
      - web
      - local
    environment:
      RAZZLE_INTERNAL_API_PATH: http://backend:8080/Flexbiz
      RAZZLE_API_PATH: https://www.{{ domain }}
      DEBUG: superagent
    labels:
      - "traefik.enable=true"
      # Service
      - "traefik.http.services.svc-frontend.loadbalancer.server.port=3000"
      # Router: Varnish Public
      - "traefik.http.routers.rt-frontend-public.rule=Host(`www.{{ domain }}`)"
      - "traefik.http.routers.rt-frontend-public.entrypoints=websecure"
      - "traefik.http.routers.rt-frontend-public.service=svc-varnish"
      - "traefik.http.routers.rt-frontend-public.middlewares=gzip"
      # Router: Internal
      - "traefik.http.routers.rt-frontend-internal.rule=Host(`www.{{ domain }}`) && Headers(`X-Varnish-Routed`, `1`)"
      - "traefik.http.routers.rt-frontend-internal.entrypoints=websecure"
      - "traefik.http.routers.rt-frontend-internal.service=svc-frontend"

  backend:
    image: plone/plone-backend:6.0
    networks:
      - local
    environment:
      SITE: Flexbiz
      PROFILES: "plone.app.caching:with-caching-proxy"
    volumes:
      - /mnt/plone:/data
    labels:
      - traefik.enable=true
      # Service
      - traefik.http.services.svc-backend.loadbalancer.server.port=8080
      # Middleware
      ## Virtual Host Monster for /++api++/
      - "traefik.http.middlewares.mw-backend-vhm-api.replacepathregex.regex=^/\\+\\+api\\+\\+($$|/.*)"
      - "traefik.http.middlewares.mw-backend-vhm-api.replacepathregex.replacement=/VirtualHostBase/http/www.{{ domain }}/Flexbiz/++api++/VirtualHostRoot$$1"
      ## Virtual Host Monster for /ClassicUI/
      - "traefik.http.middlewares.mw-backend-vhm-ui.replacepathregex.regex=^/ClassicUI($$|/.*)"
      - "traefik.http.middlewares.mw-backend-vhm-ui.replacepathregex.replacement=/VirtualHostBase/http/www.{{ domain }}/Flexbiz/VirtualHostRoot/_vh_ClassicUI$$1"
      # Router: Varnish Public
      ## /++api++/
      - traefik.http.routers.rt-backend-api-public.rule=Host(`www.{{ domain }}`) && PathPrefix(`/++api++`)
      - traefik.http.routers.rt-backend-api-public.entrypoints=websecure
      - traefik.http.routers.rt-backend-api-public.service=svc-varnish
      - traefik.http.routers.rt-backend-api-public.middlewares=gzip
      # Router: Internal
      ## /++api++/
      - traefik.http.routers.rt-backend-api-internal.rule=Host(`www.{{ domain }}`) && PathPrefix(`/++api++`) && Headers(`X-Varnish-Routed`, `1`)
      - traefik.http.routers.rt-backend-api-internal.entrypoints=websecure
      - traefik.http.routers.rt-backend-api-internal.service=svc-backend
      - traefik.http.routers.rt-backend-api-internal.middlewares=gzip,mw-backend-vhm-api
      ## /ClassicUI/
      - traefik.http.routers.rt-backend-ui-internal.rule=Host(`www.{{ domain }}`) && PathPrefix(`/ClassicUI`) && Headers(`X-Varnish-Routed`, `1`)
      - traefik.http.routers.rt-backend-ui-internal.entrypoints=websecure
      - traefik.http.routers.rt-backend-ui-internal.service=svc-backend
      - traefik.http.routers.rt-backend-ui-internal.middlewares=gzip,mw-backend-vhm-ui

  purger:
    image: ghcr.io/kitconcept/cluster-purger:latest
    platform: linux/amd64
    networks:
      - web
      - local
    environment:
      PURGER_SERVICE_NAME: varnish
      PURGER_SERVICE_PORT: 80
      PURGER_MODE: "compose"
      PURGER_PUBLIC_SITES: "['www.{{ domain }}']"

  varnish:
    image: varnish
    networks:
      - web
      - local
    volumes:
      - /etc/varnish.vcl:/etc/varnish/default.vcl
    labels:
      - traefik.enable=true
      # SERVICE
      - traefik.http.services.svc-varnish.loadbalancer.server.port=80