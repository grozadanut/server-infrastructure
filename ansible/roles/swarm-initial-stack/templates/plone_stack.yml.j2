networks:
  web:
    external: true
  local:
    external: true

services:
  frontend:
    image: plone/plone-frontend:17
    networks:
      - web
      - local
    environment:
      RAZZLE_INTERNAL_API_PATH: http://backend:8080/Flexbiz
      RAZZLE_API_PATH: https://www.{{ domain }}
    deploy:
      mode: replicated
      replicas: 1
      labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "certbot.domain=www.{{ domain }}"
      # Service
      - "traefik.http.services.svc-frontend.loadbalancer.server.port=3000"
      # Router: Public
      - "traefik.http.routers.rt-frontend-public.rule=Host(`www.{{ domain }}`)"
      - "traefik.http.routers.rt-frontend-public.entrypoints=websecure"
      - "traefik.http.routers.rt-frontend-public.service=svc-frontend"
      - "traefik.http.routers.rt-frontend-public.middlewares=gzip"

  backend:
    image: plone/plone-backend:6.0
    networks:
      - local
    environment:
      SITE: Flexbiz
    volumes:
      - /mnt/plone:/data
    deploy:
      mode: replicated
      replicas: 1
      labels:
      - traefik.enable=true
      # Service
      - traefik.http.services.svc-backend.loadbalancer.server.port=8080
      # Middleware
      ## Virtual Host Monster for /++api++/
      - "traefik.http.middlewares.mw-backend-vhm-api.replacepathregex.regex=^/\\+\\+api\\+\\+($$|/.*)"
      - "traefik.http.middlewares.mw-backend-vhm-api.replacepathregex.replacement=/VirtualHostBase/http/www.{{ domain }}/Flexbiz/++api++/VirtualHostRoot$$1"
      # Router: Internal
      ## /++api++/
      - "traefik.http.routers.rt-backend-api-internal.rule=Host(`www.{{ domain }}`) && PathPrefix(`/++api++`)"
      - "traefik.http.routers.rt-backend-api-internal.entrypoints=websecure"
      - "traefik.http.routers.rt-backend-api-internal.service=svc-backend"
      - "traefik.http.routers.rt-backend-api-internal.middlewares=gzip,mw-backend-vhm-api"
