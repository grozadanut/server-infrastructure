version: '3.8'

networks:
  web:
    external: true
  local:
    external: true

services:
  traefik:
    image: traefik:v3.1.2
    tty: true
    networks:
      - web
    ports:
      - published: 80
        target: 80
        mode: host
      - published: 443
        target: 443
        mode: host
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      update_config:
        delay: 10s
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=web"
        - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"{%if enable_https %}
        - "traefik.http.routers.http-catchall.entrypoints=web"
        - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"
        - "traefik.http.routers.http-catchall.rule=HostRegexp(`.*`)"
        - "traefik.http.routers.http-catchall.priority=1000"{% endif %}{{''}}
    command:
      - "--api.dashboard=false"
      - "--providers.swarm.endpoint=unix:///var/run/docker.sock"
      - "--providers.swarm.exposedByDefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.websecure.http.tls=true"
      - "--accesslog=true"
      - "--accesslog.format=json"
      - "--providers.file.filename=/etc/letsencrypt/traefik.yml"
      - "--providers.file.watch=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/letsencrypt:/etc/letsencrypt

  {%if enable_https %}
  certbot:
    image: brablc/swarm-certbot-traefik
    tty: true
    networks:
      - web
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      labels:
        - "traefik.enable=true"
        - "traefik.docker.network=web"
        - "traefik.http.routers.certbot.entrypoints=web"
        - "traefik.http.routers.certbot.rule=PathPrefix(`/.well-known/acme-challenge`)"
        - "traefik.http.routers.certbot.priority=1010"
        - "traefik.http.services.certbot.loadbalancer.server.port=80"
    environment:
      LOOP_SLEEP: 60s
      CERTBOT_EMAIL: {{ certbot_email }}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /mnt/letsencrypt:/etc/letsencrypt
  {% endif %}

  agent:
    image: portainer/agent:2.20.3
    environment:
      # REQUIRED: Should be equal to the service name prefixed by "tasks." when
      # deployed inside an overlay network
      AGENT_CLUSTER_ADDR: tasks.agent
      # AGENT_PORT: 9001
      # LOG_LEVEL: debug
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /var/lib/docker/volumes:/var/lib/docker/volumes
    networks:
      - local
    deploy:
      mode: global
      placement:
        constraints: [node.platform.os == linux]

  portainer:
    image: portainer/portainer-ce:2.20.3
    command: -H tcp://tasks.agent:9001 --tlsskipverify
    volumes:
      - /mnt/portainer:/data
    networks:
      - web
      - local
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints: [node.role == manager]
      labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.portainer.rule=Host(`portainer.{{ domain }}`)"
      - "traefik.http.routers.portainer.entrypoints=websecure"
      - "traefik.http.services.portainer.loadbalancer.server.port=9000"
      - "traefik.http.routers.portainer.service=portainer"
      - "certbot.domain=portainer.{{ domain }}"

  filestash:
    image: machines/filestash
    environment:
    - APPLICATION_URL=files.{{ domain }}
    - ONLYOFFICE_URL=http://onlyoffice
    volumes:
    - /mnt/filestash:/app/data/state
    networks:
      - web
      - local
    deploy:
      mode: replicated
      replicas: 1
      labels:
      - "traefik.enable=true"
      - "traefik.docker.network=web"
      - "traefik.http.routers.filestash.rule=Host(`files.{{ domain }}`)"
      - "traefik.http.routers.filestash.entrypoints=websecure"
      - "traefik.http.services.filestash.loadbalancer.server.port=8334"
      - "traefik.http.routers.filestash.service=filestash"
      - "certbot.domain=files.{{ domain }}"

  onlyoffice:
    image: onlyoffice/documentserver:7.1
    networks:
      - local
    deploy:
      mode: replicated
      replicas: 1